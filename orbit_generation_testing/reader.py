# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/00_data_reader.ipynb.

# %% auto 0
__all__ = ['load_orbit_data', 'get_big_orbitb_data', 'get_example_orbit_data']

# %% ../nbs/00_data_reader.ipynb 2
import h5py
from scipy.io import loadmat
import numpy as np
from pathlib import Path

# %% ../nbs/00_data_reader.ipynb 6
def load_orbit_data(file_path, variable_name=None, dataset_path=None):
    """
    Load orbit data from MATLAB .mat files or HDF5 .h5 files.

    Parameters:
    - file_path: str, the path to the .mat or .h5 file.
    - variable_name: str, optional, the name of the variable in the .mat file.
    - dataset_path: str, optional, the path to the dataset in the .h5 file.

    Returns:
    - data: The loaded orbit data.
    """
    if file_path.endswith('.mat'):
        if variable_name is None:
            raise ValueError("variable_name must be provided for .mat files")
        mat = loadmat(file_path)
        if variable_name in mat:
            data = mat[variable_name]
        else:
            raise ValueError(f"{variable_name} not found in {file_path}")
    
    elif file_path.endswith('.h5'):
        with h5py.File(file_path, 'r') as file:
            if dataset_path:
                if dataset_path in file:
                    data = np.array(file[dataset_path])
                else:
                    raise ValueError(f"{dataset_path} not found in {file_path}")
    
    else:
        raise ValueError("Unsupported file format. Please provide a .mat or .h5 file.")
    
    return data

# %% ../nbs/00_data_reader.ipynb 9
def get_big_orbitb_data():
    hdf5_file_path = r"C:\Users\alvar\Desktop\Orbit\Data\em_orbits.h5"
    dataset_path = '/files/PERIODIC ORBITS'
    data_h5 = load_orbit_data(hdf5_file_path, dataset_path=dataset_path)
    no_time_data = data_h5[:, 1:, :]
    return no_time_data

# %% ../nbs/00_data_reader.ipynb 10
def get_example_orbit_data():
    """
    Load orbit data from a hardcoded MAT file located in the `data` directory.
    
    The function is specifically designed to load the 'Xarray' variable 
    from the '1_L2_S_200_EM_CR3BP.mat' file. This setup is intended for 
    demonstration or testing purposes, where the data file and the variable 
    of interest are known ahead of time.

    :return: A numpy.ndarray containing the transposed data from the MAT file.
    """
    # Hardcoded file name and variable name
    filename = "1_L2_S_200_EM_CR3BP.mat"
    variable_name = 'Xarray'
    
    # Assuming the notebook or script is executed in a directory at the same level as the `data` folder
    current_dir = Path.cwd().parent
    matlab_file_path = current_dir / "data" / filename
    
    # Assuming `load_orbit_data` is a predefined function that loads and returns data from the .mat file
    data_mat = load_orbit_data(str(matlab_file_path), variable_name=variable_name)
    # Transpose the data for further use
    data_mat = np.transpose(data_mat, (2, 1, 0))
    
    return data_mat

