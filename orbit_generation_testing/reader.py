# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/00_data_reader.ipynb.

# %% auto 0
__all__ = ['load_orbit_data', 'list_datasets_recursive', 'get_example_h5_data', 'get_example_mat_data']

# %% ../nbs/00_data_reader.ipynb 2
import h5py
from scipy.io import loadmat
import numpy as np

# %% ../nbs/00_data_reader.ipynb 4
def load_orbit_data(file_path, variable_name=None, dataset_path=None):
    """
    Load orbit data from MATLAB .mat files or HDF5 .h5 files.

    Parameters:
    - file_path: str, the path to the .mat or .h5 file.
    - variable_name: str, optional, the name of the variable in the .mat file.
    - dataset_path: str, optional, the path to the dataset in the .h5 file.

    Returns:
    - data: The loaded orbit data.
    """
    if file_path.endswith('.mat'):
        if variable_name is None:
            raise ValueError("variable_name must be provided for .mat files")
        mat = loadmat(file_path)
        if variable_name in mat:
            data = mat[variable_name]
        else:
            raise ValueError(f"{variable_name} not found in {file_path}")
    
    elif file_path.endswith('.h5'):
        with h5py.File(file_path, 'r') as file:
            if dataset_path:
                if dataset_path in file:
                    data = np.array(file[dataset_path])
                else:
                    raise ValueError(f"{dataset_path} not found in {file_path}")
            else:
                print("Listing all groups and datasets in the file:")
                list_datasets_recursive(file)
                raise ValueError("dataset_path must be provided to load data from .h5 files")
    
    else:
        raise ValueError("Unsupported file format. Please provide a .mat or .h5 file.")
    
    return data

# %% ../nbs/00_data_reader.ipynb 5
def list_datasets_recursive(file, path="/"):
    """
    Recursively lists all datasets in an HDF5 file and their paths.
    """
    for key in file[path].keys():
        item_path = f"{path}{key}"  # Construct the path for the current item
        if isinstance(file[item_path], h5py.Dataset):
            print(f"Dataset: {item_path}")
        elif isinstance(file[item_path], h5py.Group):
            print(f"Group: {item_path}")
            list_datasets_recursive(file, path=item_path+"/")

# %% ../nbs/00_data_reader.ipynb 6
def get_example_h5_data():
    hdf5_file_path = r"C:\Users\alvar\Desktop\Orbit\Data\em_orbits.h5"
    dataset_path = '/files/PERIODIC ORBITS'
    data_h5 = load_orbit_data(hdf5_file_path, dataset_path=dataset_path)

    return data_h5

# %% ../nbs/00_data_reader.ipynb 7
def get_example_mat_data():
    matlab_file_path = r"C:\Users\alvar\Desktop\Orbit\Data\L2_S_200_EM_CR3BP.mat"
    variable_name = 'Xarray'
    data_mat = load_orbit_data(matlab_file_path, variable_name=variable_name)
    return data_mat
