# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/02_statistics.ipynb.

# %% auto 0
__all__ = ['select_and_remove', 'foo']

# %% ../nbs/02_statistics.ipynb 2
import numpy as np

# %% ../nbs/02_statistics.ipynb 4
def select_and_remove(data, select_n):
    """
    Select elements from the first dimension of the data and remove the first index
    from the second dimension.
    
    Parameters:
    - data: A 3D NumPy array.
    - select_n: An integer specifying the number of random elements to select from
                the first dimension, or a list of specific indices to select.
    
    Returns:
    - A new array with the selected elements and without the first index in the
      second dimension.
    """
    
    # Check if select_n is an integer (for random selection)
    if isinstance(select_n, int):
        indices = np.random.choice(data.shape[0], select_n, replace=False)
    elif isinstance(select_n, list):
        indices = np.array(select_n)
    else:
        raise ValueError("select_n must be an integer or a list of integers")
    
    # Selecting the data based on indices
    selected_data = data[indices]
    
    # Removing the time dimension
    reshaped_data = np.delete(selected_data, 0, axis=1)
    
    return reshaped_data

# %% ../nbs/02_statistics.ipynb 9
def foo(): pass
