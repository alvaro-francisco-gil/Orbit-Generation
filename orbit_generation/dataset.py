# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/05_build_dataset.ipynb.

# %% auto 0
__all__ = ['get_orbit_data_and_labels']

# %% ../nbs/05_build_dataset.ipynb 1
import os

# %% ../nbs/05_build_dataset.ipynb 2
def get_orbit_data_and_labels(data_directory=None):
    """
    Load orbit data from an HDF5 file and corresponding labels from a MAT file.

    If no data_directory is specified, a default relative path is used. The function expects specific 
    file structures ('em_orbits.h5' and 'EM_IC_ARRAY.mat') within the directory.

    Returns:
        tuple: 
            - orbit_data (numpy.ndarray): Reshaped and transposed orbit data suitable for analysis.
            - labels (pandas.Series): Corresponding orbit classification labels, replicated as necessary.

    The function reshapes the orbit data and adjusts dimensions to prepare for machine learning or other analyses.
    Labels are extracted from a MAT file and matched to the reshaped orbit data.
    """

    # Define the default data directory based on the script's location if not provided
    if data_directory is None:
        data_directory = os.path.join(os.path.dirname(__file__), "Data")
    
    # Get Orbit Data
    hdf5_file_path = os.path.join(data_directory, "em_orbits.h5")
    with h5py.File(hdf5_file_path, 'r') as file:
        data = np.array(file['/files/PERIODIC ORBITS'])
    reshaped_array = data.reshape(36071, 7, 5, 1500)
    orbit_data = reshaped_array.transpose(0, 2, 1, 3).reshape(36071 * 5, 7, 1500)
    
    # Get Orbit Labels
    labels_df = get_orbit_features(orbit_directory)
    labels = pd.Series(labels_df['Orbit Family']).repeat(5).reset_index(drop=True)

    return orbit_data, labels
